/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { LocationSegments, MatchResults, RouterHistory } from "@stencil/router";
import { ExtendedHistoryType, MenuItem } from "./interfaces";
export namespace Components {
    interface DropdownRenderer {
        "active": boolean;
        "somethingChanged": boolean;
        "url": any;
    }
    interface EventExpandableRenderer {
        "active": boolean;
        "firstMenuChild": any;
        "history": RouterHistory;
        "item": any;
        "somethingChanged": boolean;
        "url": any;
    }
    interface ExpandableRenderer {
        "active": boolean;
        "firstMenuChild": any;
        "history": RouterHistory;
        "somethingChanged": boolean;
        "url": any;
    }
    interface MobileProfileRenderer {
        "userInfo": any;
    }
    interface PskAppMenu {
        "hamburgerMaxWidth"?: number;
        "historyType": ExtendedHistoryType;
        "itemRenderer"?: string;
        "menuItems"?: MenuItem[];
    }
    interface PskAppRoot {
        "controller": any;
        "disableSidebar": boolean;
    }
    interface PskAppRouter {
        "historyType": ExtendedHistoryType;
        "routesItems"?: MenuItem[];
    }
    interface PskDefaultRenderer {
        "disableSidebar": boolean;
        "mobileLayout": boolean;
    }
    interface PskMenuItemRenderer {
        "active": boolean;
        "historyType": ExtendedHistoryType;
        "value": MenuItem;
    }
    interface PskPageLoader {
        "pageUrl": string;
        "type": string;
    }
    interface PskPageNotFound {
        "basePath"?: string;
        "pageRenderer"?: string;
        "urlDestination"?: string;
    }
    interface PskPageNotFoundRenderer {
    }
    interface PskRouteRedirect {
        "history": RouterHistory;
        "url": any;
    }
    interface PskSsapp {
        "appName": string;
        "history": RouterHistory;
        "landingPath": string;
        "match": MatchResults;
        "params": string;
        "seed": string;
    }
    interface PskUiLoader {
        "shouldBeRendered": boolean;
    }
    interface PskUserProfile {
        "profileRenderer": any;
        "userInfo": any;
    }
    interface PskUserProfileRenderer {
        "userInfo": any;
    }
    interface QueryPageLink {
        "activeClass": string;
        "anchorClass"?: string;
        "anchorId"?: string;
        "anchorRole"?: string;
        "anchorTabIndex"?: string;
        "anchorTitle"?: string;
        "ariaHaspopup"?: string;
        "ariaLabel"?: string;
        "ariaPosinset"?: string;
        "ariaSetsize"?: number;
        /**
          * Custom tag to use instead of an anchor
         */
        "custom": string;
        "exact": boolean;
        "history"?: RouterHistory;
        "location"?: LocationSegments;
        "strict": boolean;
        "url"?: string;
        "urlMatch"?: string;
    }
    interface QueryPagesRouter {
        "history": RouterHistory;
        "location": LocationSegments;
        "pages": MenuItem[];
        "redirectTo": string;
    }
    interface SidebarRenderer {
        "active": boolean;
        "historyType": ExtendedHistoryType;
        "value": MenuItem;
    }
}
declare global {
    interface HTMLDropdownRendererElement extends Components.DropdownRenderer, HTMLStencilElement {
    }
    var HTMLDropdownRendererElement: {
        prototype: HTMLDropdownRendererElement;
        new (): HTMLDropdownRendererElement;
    };
    interface HTMLEventExpandableRendererElement extends Components.EventExpandableRenderer, HTMLStencilElement {
    }
    var HTMLEventExpandableRendererElement: {
        prototype: HTMLEventExpandableRendererElement;
        new (): HTMLEventExpandableRendererElement;
    };
    interface HTMLExpandableRendererElement extends Components.ExpandableRenderer, HTMLStencilElement {
    }
    var HTMLExpandableRendererElement: {
        prototype: HTMLExpandableRendererElement;
        new (): HTMLExpandableRendererElement;
    };
    interface HTMLMobileProfileRendererElement extends Components.MobileProfileRenderer, HTMLStencilElement {
    }
    var HTMLMobileProfileRendererElement: {
        prototype: HTMLMobileProfileRendererElement;
        new (): HTMLMobileProfileRendererElement;
    };
    interface HTMLPskAppMenuElement extends Components.PskAppMenu, HTMLStencilElement {
    }
    var HTMLPskAppMenuElement: {
        prototype: HTMLPskAppMenuElement;
        new (): HTMLPskAppMenuElement;
    };
    interface HTMLPskAppRootElement extends Components.PskAppRoot, HTMLStencilElement {
    }
    var HTMLPskAppRootElement: {
        prototype: HTMLPskAppRootElement;
        new (): HTMLPskAppRootElement;
    };
    interface HTMLPskAppRouterElement extends Components.PskAppRouter, HTMLStencilElement {
    }
    var HTMLPskAppRouterElement: {
        prototype: HTMLPskAppRouterElement;
        new (): HTMLPskAppRouterElement;
    };
    interface HTMLPskDefaultRendererElement extends Components.PskDefaultRenderer, HTMLStencilElement {
    }
    var HTMLPskDefaultRendererElement: {
        prototype: HTMLPskDefaultRendererElement;
        new (): HTMLPskDefaultRendererElement;
    };
    interface HTMLPskMenuItemRendererElement extends Components.PskMenuItemRenderer, HTMLStencilElement {
    }
    var HTMLPskMenuItemRendererElement: {
        prototype: HTMLPskMenuItemRendererElement;
        new (): HTMLPskMenuItemRendererElement;
    };
    interface HTMLPskPageLoaderElement extends Components.PskPageLoader, HTMLStencilElement {
    }
    var HTMLPskPageLoaderElement: {
        prototype: HTMLPskPageLoaderElement;
        new (): HTMLPskPageLoaderElement;
    };
    interface HTMLPskPageNotFoundElement extends Components.PskPageNotFound, HTMLStencilElement {
    }
    var HTMLPskPageNotFoundElement: {
        prototype: HTMLPskPageNotFoundElement;
        new (): HTMLPskPageNotFoundElement;
    };
    interface HTMLPskPageNotFoundRendererElement extends Components.PskPageNotFoundRenderer, HTMLStencilElement {
    }
    var HTMLPskPageNotFoundRendererElement: {
        prototype: HTMLPskPageNotFoundRendererElement;
        new (): HTMLPskPageNotFoundRendererElement;
    };
    interface HTMLPskRouteRedirectElement extends Components.PskRouteRedirect, HTMLStencilElement {
    }
    var HTMLPskRouteRedirectElement: {
        prototype: HTMLPskRouteRedirectElement;
        new (): HTMLPskRouteRedirectElement;
    };
    interface HTMLPskSsappElement extends Components.PskSsapp, HTMLStencilElement {
    }
    var HTMLPskSsappElement: {
        prototype: HTMLPskSsappElement;
        new (): HTMLPskSsappElement;
    };
    interface HTMLPskUiLoaderElement extends Components.PskUiLoader, HTMLStencilElement {
    }
    var HTMLPskUiLoaderElement: {
        prototype: HTMLPskUiLoaderElement;
        new (): HTMLPskUiLoaderElement;
    };
    interface HTMLPskUserProfileElement extends Components.PskUserProfile, HTMLStencilElement {
    }
    var HTMLPskUserProfileElement: {
        prototype: HTMLPskUserProfileElement;
        new (): HTMLPskUserProfileElement;
    };
    interface HTMLPskUserProfileRendererElement extends Components.PskUserProfileRenderer, HTMLStencilElement {
    }
    var HTMLPskUserProfileRendererElement: {
        prototype: HTMLPskUserProfileRendererElement;
        new (): HTMLPskUserProfileRendererElement;
    };
    interface HTMLQueryPageLinkElement extends Components.QueryPageLink, HTMLStencilElement {
    }
    var HTMLQueryPageLinkElement: {
        prototype: HTMLQueryPageLinkElement;
        new (): HTMLQueryPageLinkElement;
    };
    interface HTMLQueryPagesRouterElement extends Components.QueryPagesRouter, HTMLStencilElement {
    }
    var HTMLQueryPagesRouterElement: {
        prototype: HTMLQueryPagesRouterElement;
        new (): HTMLQueryPagesRouterElement;
    };
    interface HTMLSidebarRendererElement extends Components.SidebarRenderer, HTMLStencilElement {
    }
    var HTMLSidebarRendererElement: {
        prototype: HTMLSidebarRendererElement;
        new (): HTMLSidebarRendererElement;
    };
    interface HTMLElementTagNameMap {
        "dropdown-renderer": HTMLDropdownRendererElement;
        "event-expandable-renderer": HTMLEventExpandableRendererElement;
        "expandable-renderer": HTMLExpandableRendererElement;
        "mobile-profile-renderer": HTMLMobileProfileRendererElement;
        "psk-app-menu": HTMLPskAppMenuElement;
        "psk-app-root": HTMLPskAppRootElement;
        "psk-app-router": HTMLPskAppRouterElement;
        "psk-default-renderer": HTMLPskDefaultRendererElement;
        "psk-menu-item-renderer": HTMLPskMenuItemRendererElement;
        "psk-page-loader": HTMLPskPageLoaderElement;
        "psk-page-not-found": HTMLPskPageNotFoundElement;
        "psk-page-not-found-renderer": HTMLPskPageNotFoundRendererElement;
        "psk-route-redirect": HTMLPskRouteRedirectElement;
        "psk-ssapp": HTMLPskSsappElement;
        "psk-ui-loader": HTMLPskUiLoaderElement;
        "psk-user-profile": HTMLPskUserProfileElement;
        "psk-user-profile-renderer": HTMLPskUserProfileRendererElement;
        "query-page-link": HTMLQueryPageLinkElement;
        "query-pages-router": HTMLQueryPagesRouterElement;
        "sidebar-renderer": HTMLSidebarRendererElement;
    }
}
declare namespace LocalJSX {
    interface DropdownRenderer {
        "active"?: boolean;
        "somethingChanged"?: boolean;
        "url"?: any;
    }
    interface EventExpandableRenderer {
        "active"?: boolean;
        "firstMenuChild"?: any;
        "history"?: RouterHistory;
        "item"?: any;
        "somethingChanged"?: boolean;
        "url"?: any;
    }
    interface ExpandableRenderer {
        "active"?: boolean;
        "firstMenuChild"?: any;
        "history"?: RouterHistory;
        "onSectionChange"?: (event: CustomEvent<any>) => void;
        "somethingChanged"?: boolean;
        "url"?: any;
    }
    interface MobileProfileRenderer {
        "userInfo"?: any;
    }
    interface PskAppMenu {
        "hamburgerMaxWidth"?: number;
        "historyType"?: ExtendedHistoryType;
        "itemRenderer"?: string;
        "menuItems"?: MenuItem[];
        "onGetHistoryType"?: (event: CustomEvent<any>) => void;
        "onMenuEvent"?: (event: CustomEvent<any>) => void;
        "onNeedMenuItems"?: (event: CustomEvent<any>) => void;
    }
    interface PskAppRoot {
        "controller"?: any;
        "disableSidebar"?: boolean;
    }
    interface PskAppRouter {
        "historyType"?: ExtendedHistoryType;
        "onGetCustomLandingPage"?: (event: CustomEvent<any>) => void;
        "onGetHistoryType"?: (event: CustomEvent<any>) => void;
        "onNeedRoutes"?: (event: CustomEvent<any>) => void;
        "routesItems"?: MenuItem[];
    }
    interface PskDefaultRenderer {
        "disableSidebar"?: boolean;
        "mobileLayout"?: boolean;
        "onGetAppVersion"?: (event: CustomEvent<any>) => void;
    }
    interface PskMenuItemRenderer {
        "active"?: boolean;
        "historyType"?: ExtendedHistoryType;
        "onMenuClicked"?: (event: CustomEvent<any>) => void;
        "value"?: MenuItem;
    }
    interface PskPageLoader {
        "pageUrl"?: string;
        "type"?: string;
    }
    interface PskPageNotFound {
        "basePath"?: string;
        "pageRenderer"?: string;
        "urlDestination"?: string;
    }
    interface PskPageNotFoundRenderer {
    }
    interface PskRouteRedirect {
        "history"?: RouterHistory;
        "url"?: any;
    }
    interface PskSsapp {
        "appName"?: string;
        "history"?: RouterHistory;
        "landingPath"?: string;
        "match"?: MatchResults;
        "params"?: string;
        "seed"?: string;
    }
    interface PskUiLoader {
        "shouldBeRendered"?: boolean;
    }
    interface PskUserProfile {
        "onGetUserInfo"?: (event: CustomEvent<any>) => void;
        "profileRenderer"?: any;
        "userInfo"?: any;
    }
    interface PskUserProfileRenderer {
        "userInfo"?: any;
    }
    interface QueryPageLink {
        "activeClass"?: string;
        "anchorClass"?: string;
        "anchorId"?: string;
        "anchorRole"?: string;
        "anchorTabIndex"?: string;
        "anchorTitle"?: string;
        "ariaHaspopup"?: string;
        "ariaLabel"?: string;
        "ariaPosinset"?: string;
        "ariaSetsize"?: number;
        /**
          * Custom tag to use instead of an anchor
         */
        "custom"?: string;
        "exact"?: boolean;
        "history"?: RouterHistory;
        "location"?: LocationSegments;
        "strict"?: boolean;
        "url"?: string;
        "urlMatch"?: string;
    }
    interface QueryPagesRouter {
        "history"?: RouterHistory;
        "location"?: LocationSegments;
        "pages"?: MenuItem[];
        "redirectTo"?: string;
    }
    interface SidebarRenderer {
        "active"?: boolean;
        "historyType"?: ExtendedHistoryType;
        "value"?: MenuItem;
    }
    interface IntrinsicElements {
        "dropdown-renderer": DropdownRenderer;
        "event-expandable-renderer": EventExpandableRenderer;
        "expandable-renderer": ExpandableRenderer;
        "mobile-profile-renderer": MobileProfileRenderer;
        "psk-app-menu": PskAppMenu;
        "psk-app-root": PskAppRoot;
        "psk-app-router": PskAppRouter;
        "psk-default-renderer": PskDefaultRenderer;
        "psk-menu-item-renderer": PskMenuItemRenderer;
        "psk-page-loader": PskPageLoader;
        "psk-page-not-found": PskPageNotFound;
        "psk-page-not-found-renderer": PskPageNotFoundRenderer;
        "psk-route-redirect": PskRouteRedirect;
        "psk-ssapp": PskSsapp;
        "psk-ui-loader": PskUiLoader;
        "psk-user-profile": PskUserProfile;
        "psk-user-profile-renderer": PskUserProfileRenderer;
        "query-page-link": QueryPageLink;
        "query-pages-router": QueryPagesRouter;
        "sidebar-renderer": SidebarRenderer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dropdown-renderer": LocalJSX.DropdownRenderer & JSXBase.HTMLAttributes<HTMLDropdownRendererElement>;
            "event-expandable-renderer": LocalJSX.EventExpandableRenderer & JSXBase.HTMLAttributes<HTMLEventExpandableRendererElement>;
            "expandable-renderer": LocalJSX.ExpandableRenderer & JSXBase.HTMLAttributes<HTMLExpandableRendererElement>;
            "mobile-profile-renderer": LocalJSX.MobileProfileRenderer & JSXBase.HTMLAttributes<HTMLMobileProfileRendererElement>;
            "psk-app-menu": LocalJSX.PskAppMenu & JSXBase.HTMLAttributes<HTMLPskAppMenuElement>;
            "psk-app-root": LocalJSX.PskAppRoot & JSXBase.HTMLAttributes<HTMLPskAppRootElement>;
            "psk-app-router": LocalJSX.PskAppRouter & JSXBase.HTMLAttributes<HTMLPskAppRouterElement>;
            "psk-default-renderer": LocalJSX.PskDefaultRenderer & JSXBase.HTMLAttributes<HTMLPskDefaultRendererElement>;
            "psk-menu-item-renderer": LocalJSX.PskMenuItemRenderer & JSXBase.HTMLAttributes<HTMLPskMenuItemRendererElement>;
            "psk-page-loader": LocalJSX.PskPageLoader & JSXBase.HTMLAttributes<HTMLPskPageLoaderElement>;
            "psk-page-not-found": LocalJSX.PskPageNotFound & JSXBase.HTMLAttributes<HTMLPskPageNotFoundElement>;
            "psk-page-not-found-renderer": LocalJSX.PskPageNotFoundRenderer & JSXBase.HTMLAttributes<HTMLPskPageNotFoundRendererElement>;
            "psk-route-redirect": LocalJSX.PskRouteRedirect & JSXBase.HTMLAttributes<HTMLPskRouteRedirectElement>;
            "psk-ssapp": LocalJSX.PskSsapp & JSXBase.HTMLAttributes<HTMLPskSsappElement>;
            "psk-ui-loader": LocalJSX.PskUiLoader & JSXBase.HTMLAttributes<HTMLPskUiLoaderElement>;
            "psk-user-profile": LocalJSX.PskUserProfile & JSXBase.HTMLAttributes<HTMLPskUserProfileElement>;
            "psk-user-profile-renderer": LocalJSX.PskUserProfileRenderer & JSXBase.HTMLAttributes<HTMLPskUserProfileRendererElement>;
            "query-page-link": LocalJSX.QueryPageLink & JSXBase.HTMLAttributes<HTMLQueryPageLinkElement>;
            "query-pages-router": LocalJSX.QueryPagesRouter & JSXBase.HTMLAttributes<HTMLQueryPagesRouterElement>;
            "sidebar-renderer": LocalJSX.SidebarRenderer & JSXBase.HTMLAttributes<HTMLSidebarRendererElement>;
        }
    }
}
